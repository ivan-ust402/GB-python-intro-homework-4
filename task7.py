"""
7) Реализовать генератор с помощью функции с ключевым словом yield, создающим
очередное значение. При вызове функции должен создаваться объект-генератор.
Функция должна вызываться следующим образом: for el in fact(n). Функция
отвечает за получение факториала числа, а в цикле необходимо выводить только
первые n чисел, начиная с 1! и до n!.
Подсказка: факториал числа n — произведение чисел от 1 до n. Например,
факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
"""


# Первый вариант решения задачи
def fact(number):
    """
    Функция генератор для нахождения факториала числа
    :param number: число для расчета факториала
    :return: пошаговое выполенение умножения
    """
    mult = 1
    count = number
    while count != 0:
        mult = mult * count
        count -= 1
        yield mult


n = int(input('Введите число для расчета факториала: '))

INDEX = 0
for el in fact(n):
    if INDEX == n - 1:
        print(f'Факториал числа {n} равен {el}')
    INDEX += 1

# Второй вариант решения задачи


def fact_2(num):
    """
    Функция генератор для нахождения факториала числа
    :param num: число для расчета факториала
    :return: пошаговое выполенение умножения
    """
    mult = 1
    count = 1
    while count != num + 1:
        mult = mult * count
        count += 1
        yield mult


m = int(input('Введите число для расчета факториала: '))

INDEX = 0
for el in fact_2(m):
    print(el)
    if INDEX == m - 1:
        print(f'Факториал числа {m} равен {el}')
    INDEX += 1
